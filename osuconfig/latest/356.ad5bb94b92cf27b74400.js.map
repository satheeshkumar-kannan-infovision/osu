{"version":3,"file":"356.ad5bb94b92cf27b74400.js","mappings":"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","sources":["webpack://osu-app/./src/components/OsuConfig.js"],"sourcesContent":["import React from 'react';\nimport Navbar from './NavBar';\nimport Variation from './Variation';\nimport AddFirmwareButton from './AddFirmwareButton';\nimport { useEffect, useState } from 'react';\nimport { Button, Row } from 'ff-core-components';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport AutoCloseAlert from './common/AutoCloseAlert';\nimport AlertDialogIdentity from './common/AlertDialogIdentity';\n\nconst variants = ['h2', 'body1', 'h2', 'body1'];\n\nfunction TypographyLoading(props) {\n    return (\n      <div>\n        {variants.map((variant, i) => (\n          <Typography component=\"div\" key={variant + '_' + i} variant={variant}>\n            {props.loading ? <Skeleton height={variant == 'rect' ? 300: 'auto'}/> : null}\n          </Typography>\n        ))}\n      </div>\n    );\n}\n\nfunction SkeletonTypography(props) {\n    return (\n        <div style={{ width: '100%' }}>\n            <Grid container >\n                <Grid item md>\n                <TypographyLoading loading={props.loading} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n}));\n\nconst OsuConfig = ({ children }) => {\n    const classes = useStyles();\n    const [ existingConfig, setExistingConfig ] = useState([]);\n    const [ existingDefaultConfig, setExistingDefaultConfig ] = useState([]);\n    const [ allFirmwares, setAllFirmwares ] = useState([]);\n    const [ loading, setLoading ] = useState(true);\n    const [ legacyLoading, setLegacyLoading ] = useState(false);\n\n    const [ enableUpdate, setEnableUpdate ] = useState(false);\n    const [ enablePromote, setEnablePromote ] = useState(false);\n    const [ disableAddFirmware, setDisableAddFirmware] = useState(false);\n    const [ containsChanges, setContainsChanges ] = useState(false);\n    const [ timestamp, setTimestamp ] = useState(null);\n    const [ apiError, setApiError ] = useState(null);\n    const [ isConfirmationDialogOpen, setIsConfirmationDialogOpen ] = useState(false);\n    const [ confirmationDialog, setConformationDialog ] = useState(null);\n    const [ noCanaryFirmwares, setNoCanaryFirmwares ] = useState(false);\n\n    const onConfirmationDialogClose = () => {\n        setIsConfirmationDialogOpen(false);\n    }\n\n    const promoteCanary = async () => {\n        setIsConfirmationDialogOpen(false);\n        setLegacyLoading(true);\n        const userData = JSON.parse(sessionStorage.getItem('userData'));\n        const userName = userData.username;\n        const apiKey = userData.ephemeral_token;\n        const postData = {\n            rollout: existingConfig.filter(item => item.isChecked).map(item => ({ ...item, percent: 100 })),\n            timestamp\n        };\n        try {\n            const response = await axios.post(`${process.env.API_URL}/osu/rollout`, postData, {\n                headers: {\n                'x-api-key': apiKey,\n                'Content-Type': 'application/json',\n                },\n            });\n            setTimestamp(response.data.timestamp);\n            setAllFirmwares(response.data.firmwares);\n            setExistingConfig(response.data.rollouts.map((firmwareValue, i) => {\n                return {\n                    ...firmwareValue,\n                    isExisting: true\n                }\n            }));\n            setExistingDefaultConfig(response.data.rollouts.map((firmwareValue, i) => {\n                return {\n                    ...firmwareValue,\n                    isExisting: true,\n                    isChecked: false\n                }\n            }));\n            setApiError({ type: 'success', message: 'Canary config promoted successfully.' });\n        } catch (error) {\n            console.error('Error:', error);\n            if (error.response) {\n                setApiError({ type: 'error', message: error.response.data.error });\n            } else {\n                setApiError({ type: 'error', message: JSON.stringify(error) });\n            }\n        } finally {\n            setLegacyLoading(false); // Set loading to false when request completes\n        }\n    }\n\n    const updateCanary = async () => {\n        setIsConfirmationDialogOpen(false);\n        setLegacyLoading(true);\n        const userData = JSON.parse(sessionStorage.getItem('userData'));\n        const userName = userData.username;\n        const apiKey = userData.ephemeral_token;\n        const postData = {\n            rollout: existingConfig.filter(item => item.isChecked && item.isDirty && item.percent > 0),\n            timestamp\n        };\n        try {\n            const response = await axios.post(`${process.env.API_URL}/osu/rollout`, postData, {\n                headers: {\n                'x-api-key': apiKey,\n                'Content-Type': 'application/json',\n                },\n            });\n            setTimestamp(response.data.timestamp);\n            setAllFirmwares(response.data.firmwares);\n            setExistingConfig(response.data.rollouts.map((firmwareValue, i) => {\n                return {\n                    ...firmwareValue,\n                    isExisting: true\n                }\n            }));\n            setExistingDefaultConfig(response.data.rollouts.map((firmwareValue, i) => {\n                return {\n                    ...firmwareValue,\n                    isExisting: true,\n                    isChecked: false\n                }\n            }));\n            setApiError({ type: 'success', message: 'Canary config updated successfully.' });\n        } catch (error) {\n            console.error('Error:', error);\n            if (error.response.status === 409) {\n                setApiError({ type: 'error', message: 'There\\'s some changes happened before your update.' });\n                setTimeout(() => { getFirmwareRollout() }, 5000);\n            } else if (error.response) {\n                // Handle 409 status code (Conflict) here\n                console.error('Error:', error.response.data.error);\n            } else {\n                setApiError({ type: 'error', message: JSON.stringify(error) });\n            }\n        } finally {\n            setLegacyLoading(false); // Set loading to false when request completes\n        }\n    }\n\n    const resetFirmwares = () => {\n        setExistingConfig(existingDefaultConfig);\n    };\n\n    const addFirmware = () => {\n        setExistingConfig(prevOptions => [\n            ...prevOptions,\n            {\n                version: '',\n                percent: 0,\n                isExisting: false\n            },\n        ]);\n    };\n\n    const removeFirmware = (i) => {\n        const updatedOptions = [...existingConfig.slice(0, i), ...existingConfig.slice(i + 1)];\n        setExistingConfig(updatedOptions);\n    }\n\n    const updateFirmware = (i, item) => {\n        setExistingConfig(prevOptions => [\n            ...prevOptions.slice(0, i),\n            item,\n            ...prevOptions.slice(i + 1)\n        ]);\n    }\n\n    const getTitle = () => {\n        switch (confirmationDialog?.type) {\n            case 'update':\n                return \"Update Rollout Config\";\n            case 'promote':\n                return \"Promote Canary\";\n            case 'pause':\n                return \"Pause Canary\";\n            default:\n                return \"Confirm Action\";\n        }\n    };\n\n\n    const getFirmwareRollout = () => {\n        setLoading(true);\n        const userData = JSON.parse(sessionStorage.getItem('userData'));\n        const apiKey = userData.ephemeral_token;\n        axios.get(`${process.env.API_URL}/osu/rollout`, {\n        headers: {\n            'x-api-key': apiKey\n        }\n        })\n        .then(response => {\n            if (response.data.firmwares.length === 0 && response.data.rollouts.length === 0) {\n                setNoCanaryFirmwares(true);\n            }\n            setAllFirmwares(response.data.firmwares);\n            if (response.data.firmwares.length === 0) {\n                setExistingConfig({\n                    version: '',\n                    percent: 0,\n                    isExisting: false\n                });\n                setExistingDefaultConfig({\n                    version: '',\n                    percent: 0,\n                    isExisting: false\n                });\n            } else {\n                setExistingConfig(response.data.rollouts.map((firmwareValue, i) => {\n                    return {\n                        ...firmwareValue,\n                        isExisting: true\n                    }\n                }));\n                setExistingDefaultConfig(response.data.rollouts.map((firmwareValue, i) => {\n                    return {\n                        ...firmwareValue,\n                        isExisting: true\n                    }\n                }));\n            }\n            setTimestamp(response.data.timestamp ? response.data.timestamp : 0);\n            setLoading(false);\n            setApiError(null);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            setLoading(false);\n            setApiError({ type: 'error', message: JSON.stringify(error) });\n        })\n        .finally(() => {\n            setLoading(false);\n        })\n    }\n    useEffect(() => {\n        getFirmwareRollout();\n    }, [])\n\n    useEffect(() => {\n        if (existingConfig.length > 0) {\n            const containsFirmware = (existingConfig.some(item => item.version !== \"\" && item.isChecked === true && item.isDirty === true && parseInt(item.percent) !== 0)) && (!existingConfig.some(item => ((item.version === \"\" || !item.isDirty || parseInt(item.percent) === 0) && item.isChecked === true)));\n            setEnableUpdate(containsFirmware);\n            const promote = existingConfig.some(item => item.version !== \"\" && item.isChecked === true) && (!existingConfig.some(item => item.version === \"\" && item.isChecked === true));\n            setEnablePromote(promote);\n            const disableAddFirmware = allFirmwares.length === existingConfig.length;\n            setDisableAddFirmware(disableAddFirmware)\n            const containsChanges = existingConfig.some(item => item.isExisting === false || item.isDirty ===  true || item.isChecked === true);\n            setContainsChanges(containsChanges);\n        }\n    }, [existingConfig])\n    \n    return (\n        <div>\n            <Navbar style={{ paddingLeft: '10px' }}/>\n            <div className='container my-5'>\n                {\n                    noCanaryFirmwares && <h3 style={{ textAlign: 'center' }}>No canary firmwares available</h3>\n                }\n                {apiError && (\n                    <AutoCloseAlert\n                        type={apiError.type}\n                        message={apiError.message}\n                        setApiError={setApiError}\n                        className='my-3'\n                        variant=\"filled\"\n                    />\n                )}\n                {\n                    loading ? <SkeletonTypography loading/> : (\n                        !noCanaryFirmwares && \n                        <>\n                            <Variation allFirmwares={allFirmwares} existingConfig={existingConfig} onRemove={removeFirmware} updateFirmware={updateFirmware}/>\n                            <AddFirmwareButton disabled={disableAddFirmware} onClick={() => addFirmware()} />\n                            <Row style={{ justifyContent: 'flex-end', marginTop: 40 }}>\n                                <Button disabled={!containsChanges} className={'mr-3'} onClick={() => resetFirmwares()}>Reset Changes</Button>\n                                <Button className={'mr-3'} disabled={!enablePromote} onClick={(e) => {\n                                    const filteredVersions = existingConfig\n                                    .filter(item => item.isChecked)\n                                    .map(item => item.version);\n                                    setConformationDialog({ type: 'promote', text:<span>Are you sure you want to promote the canary of below firmwares?<br /><b>{filteredVersions.map((version) => {\n                                        return (\n                                            <div>\n                                                {version}<br />\n                                            </div>\n                                        )\n                                    })}</b></span>});\n                                    setIsConfirmationDialogOpen(true)\n                                }}>Promote</Button>\n                                <Button className={'mr-3'} disabled={!enablePromote} onClick={(e) => {\n                                    const filteredVersions = existingConfig\n                                    .filter(item => item.isChecked)\n                                    .map(item => item.version);\n                                    setConformationDialog({ type: 'pause', text:<span>Are you sure you want to pause the canary of below firmwares?<br /><b>{filteredVersions.map((version) => {\n                                        return (\n                                            <div>\n                                                {version}<br />\n                                            </div>\n                                        )\n                                    })}</b></span>});\n                                    setIsConfirmationDialogOpen(true)\n                                }}>Pause</Button>\n                                <Button disabled={!enableUpdate} onClick={() => {\n                                    const filteredVersions = existingConfig\n                                    .filter(item => item.isChecked)\n                                    .map(item => item.version);\n                                    setConformationDialog({ type: 'update', text:<span>Are you sure you want to update the canary of below firmwares?<br /><b>{filteredVersions.map((version) => {\n                                        return (\n                                            <div>\n                                                {version}<br />\n                                            </div>\n                                        )\n                                    })}</b></span>});\n                                    setIsConfirmationDialogOpen(true)\n                                }}>Update Rollout</Button>\n                            </Row>\n                        </>\n                    )\n                }\n                {\n                    legacyLoading && <div>\n                        <Backdrop className={classes.backdrop} open={true}>\n                            <CircularProgress />\n                        </Backdrop>\n                    </div>\n                }\n                {\n                    isConfirmationDialogOpen && <AlertDialogIdentity\n                        title={getTitle()}\n                        text={<span>{confirmationDialog.text}</span>}\n                        isOpen={isConfirmationDialogOpen}\n                        loading={loading}\n                        handleClose={onConfirmationDialogClose}\n                        handleSubmit={() => {\n                            confirmationDialog.type === 'update' ? updateCanary() : promoteCanary()\n                        }}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default OsuConfig;"],"names":["variants","TypographyLoading","props","React","map","variant","i","Typography","component","key","loading","Skeleton","height","SkeletonTypography","style","width","Grid","container","item","md","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","_ref","children","classes","_useState","useState","existingConfig","setExistingConfig","_useState2","existingDefaultConfig","setExistingDefaultConfig","_useState3","allFirmwares","setAllFirmwares","_useState4","setLoading","_useState5","legacyLoading","setLegacyLoading","_useState6","enableUpdate","setEnableUpdate","_useState7","enablePromote","setEnablePromote","_useState8","disableAddFirmware","setDisableAddFirmware","_useState9","containsChanges","setContainsChanges","_useState10","timestamp","setTimestamp","_useState11","apiError","setApiError","_useState12","isConfirmationDialogOpen","setIsConfirmationDialogOpen","_useState13","confirmationDialog","setConformationDialog","_useState14","noCanaryFirmwares","setNoCanaryFirmwares","promoteCanary","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","userData","apiKey","postData","response","_context","prev","next","JSON","parse","sessionStorage","getItem","username","ephemeral_token","rollout","filter","isChecked","_extends","percent","axios","process","API_URL","headers","sent","data","firmwares","rollouts","firmwareValue","isExisting","type","message","t0","console","error","stringify","finish","stop","apply","arguments","updateCanary","_ref3","_callee2","_context2","isDirty","status","setTimeout","getFirmwareRollout","then","length","version","useEffect","containsFirmware","some","parseInt","promote","Navbar","paddingLeft","className","textAlign","AutoCloseAlert","Variation","onRemove","updatedOptions","concat","slice","updateFirmware","prevOptions","AddFirmwareButton","disabled","onClick","Row","justifyContent","marginTop","Button","e","filteredVersions","text","Backdrop","open","CircularProgress","AlertDialogIdentity","title","getTitle","isOpen","handleClose","handleSubmit"],"sourceRoot":""}